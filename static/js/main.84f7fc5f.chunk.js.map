{"version":3,"sources":["Shared/SharedStyles.tsx","Shared/GlobalStyle.tsx","App.tsx","index.tsx"],"names":["colours","styled","div","p","dark","GlobalStyle","createGlobalStyle","App","ReactDOM","render","basename","process","document","getElementById"],"mappings":"kjCAoBO,IAAMA,EACF,UADEA,EAEH,UAFGA,EAaD,UAiBiBC,IAAOC,IAAV,KAQOD,IAAOC,IAAV,KAcED,IAAOC,IAAV,KAUb,SAACC,GAAD,OAAqBA,EAAEC,KAAOJ,EAAeA,KAClD,SAACG,GAAD,OAAqBA,EAAEC,KAAOJ,EAAgBA,K,4gBChFzD,IAqBeK,EArBKC,YAAH,IAgBKN,GCRPO,MARf,WACE,OACE,oCACE,kBAAC,EAAD,Q,QCANC,IAASC,OACP,kBAAC,IAAD,CAAeC,SAAUC,IACvB,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.84f7fc5f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport type Colour = 'light' | 'dark' | 'primary' | 'secondary' | 'green' | 'gold' | 'darkGreen' | 'lightGreen' | 'grey80' | 'grey60' | 'grey40' | 'grey20' | 'grey80';\r\n\r\ninterface ColoursProps {\r\n    light: string,\r\n    dark: string,\r\n    primary: string,\r\n    secondary: string,\r\n    green: string,\r\n    gold: string,\r\n    darkGreen: string,\r\n    lightGreen: string,\r\n    grey80: string,\r\n    grey60: string,\r\n    grey40: string,\r\n    grey20: string,\r\n    grey5: string,\r\n}\r\n\r\nexport const colours: ColoursProps = {\r\n    light: \"#FFFFFF\",\r\n    dark: \"#000000\",\r\n    primary: \"#257841\",\r\n    secondary: \"#CBB62C\",        \r\n    green: \"#257841\",\r\n    gold: \"#CBB62C\",\r\n    darkGreen: \"#133D22\",\r\n    lightGreen: \"#226C3B\",\r\n\r\n    grey80: \"#333333\",\r\n    grey60: \"#666666\",\r\n    grey40: \"#999999\",\r\n    grey20: \"#CCCCCC\",\r\n    grey5: \"#F2F2F2\",\r\n}\r\n\r\n\r\ninterface SettingsProps {\r\n    maxWidth: string;\r\n    maxWidthHalf: string;\r\n    mobile: string;\r\n}\r\n\r\nexport const SharedSettings: SettingsProps = {\r\n    maxWidth: \"1400px\",\r\n    maxWidthHalf: \"700px\",\r\n    mobile: \"1100px\",\r\n}\r\n\r\nexport const PageContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n`;\r\n\r\nexport const PageBodyContainer = styled.div`\r\n  position: absolute;\r\n  top: 100px;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  /* overflow-y: scroll; */\r\n`;\r\n\r\n\r\ninterface SectionProps {\r\n    dark?: boolean;\r\n  }\r\n\r\nexport const SectionContainer = styled.div`\r\n  min-height: 200px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  background: ${(p: SectionProps) => p.dark ? colours.dark : colours.light};\r\n  color: ${(p: SectionProps) => p.dark ? colours.light : colours.dark};\r\n\r\n  h1 {\r\n    font-size: 3em;\r\n    font-weight: 200;\r\n    margin-top: 100px;\r\n  }\r\n\r\n  p {\r\n      font-size: 1.8em;\r\n  }\r\n`;","import { createGlobalStyle } from \"styled-components\";\r\nimport { colours } from \"./SharedStyles\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        font-family: 'Orbitron', 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\r\n        /* scroll-behavior: smooth; */\r\n        font-weight: 900;\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 8px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background: #fff;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background: ${colours.grey20};\r\n        border-radius: 20px;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;","import React from 'react';\nimport GlobalStyle from './Shared/GlobalStyle';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}